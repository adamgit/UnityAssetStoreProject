<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{B11FFD0E-A8EC-4E60-A6D2-D227484C6C48}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Editor</RootNamespace>
    <AssemblyName>$(SolutionName)</AssemblyName>
    <!-- This project should ALWAYS, ONLY, build for Unity Editor, meaning it MUST have #define UNITY_EDITOR for ALL build-configurations -->
    <DefineConstants>UNITY_EDITOR</DefineConstants>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <OutputPath>..\..\exported-DLLs\$(AssemblyName)\Editor</OutputPath>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <!-- the only way to prevent Microsoft spamming the output folder with all the referenced DLL's (Unity requires us to ONLY add the final generated DLL). Note: all other .csproj settings fail to work except this one. Also note: it's an insanity-inducing setting, Microsoft employees chose to define true===false and false===true  -->
    <Reference>
      <Private>false</Private>
    </Reference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml" />
    <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>..\..\UnitySymlink\UnityEngine.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\source-as-package\com.myassetname\Runtime\MyAssetMonoBehaviour.cs">
      <Link>Runtime\MyAssetMonoBehaviour.cs</Link>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="..\..\source-as-package\com.myassetname\Runtime\MyAssetMonoBehaviour.cs.meta">
      <Link>Runtime\MyAssetMonoBehaviour.cs.meta</Link>
    </Content>
    <Content Include="..\..\source-as-package\com.myassetname\Runtime\MyAssetName-assembly.asmdef">
      <Link>Runtime\MyAssetName-assembly.asmdef</Link>
    </Content>
    <Content Include="..\..\source-as-package\com.myassetname\Runtime\MyAssetName-assembly.asmdef.meta">
      <Link>Runtime\MyAssetName-assembly.asmdef.meta</Link>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="..\..\source-as-package\com.myassetname\Editor">
      <Link>Editor</Link>
    </Folder>
    <Folder Include="..\Runtime\bin\Debug">
      <Link>Runtime\bin\Debug</Link>
    </Folder>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->
</Project>